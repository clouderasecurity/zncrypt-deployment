#!/usr/bin/env python
#
###########SUMMARY#############
#
# ./zncrypt-clean
#
# Simple tool to clean up inactive encrypted directories. Performs the exact 
# opposite operation from a 'zncrypt-prepare' call. Requires root access.
#
# Usage: zncrypt-clean ['zncrypt-prepare'd storage directory]
#
# zNcrypt stores 'prepared' partition data in 3 different locations:
# - /etc/zncrypt/control (need to remove all JSON corresponding to the partition)
# - /etc/zncrypt/ztab (need to remove the entry for the partition)
# - /etc/zncrypt/ztrustee/deposits/<directory name> (need to erase the partition encryption key)
#
##############################
#
# Author:: Ross McDonald (ross.mcdonald@cloudera.com)
# Copyright 2014, Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from json import load, dump
from sys import argv, exit
from re import split
from os import remove, getuid
from subprocess import call

def clean_control(target_to_remove, control_file):
    print '\tCleaning control file...'
    try:
        f = open(control_file, 'r')
        control = load(f)
        for target in control['keys']['targets']:
            if target['name'] == target_to_remove:
                control['keys']['targets'].remove(target)
        f.close()
        f = open(control_file, 'w') # overwrite original file
        dump(control, f, indent=4, separators=(',', ': '))
    except IOError as e:
        print '!! Could not open control file. Are you root?'
        exit(1)
    except:
        print '!! Could not clean control file. Unexpected error.'
        raise
    else:
        f.close()
    return 0

def clean_ztab(target_to_remove, ztab_file):
    print '\tCleaning ztab file...'
    try:
        f = open(ztab_file, 'r')
        ztab_contents = f.readlines()
        f.close()
        f = open(ztab_file, 'w') # overwrite file
        for line in ztab_contents:
            if split('\s', line)[1] != target_to_remove:
                f.write(line)
    except IOError as e:
        print '!! Could not open ztab file. Are you root?'
        exit(1)
    except:
        print '!! Could not clean ztab file. Unexpected error.'
        raise
    else:
        f.close()
    return 0

def clean_deposits(target_to_remove, deposits_dir):
    print '\tCleaning deposits directory...'
    try:
        s = split('/', target_to_remove)
        deposits_file = '.'.join(s)[1:] # kinda hacky, adds period at front
        remove(deposits_dir + '/' + deposits_file)
    except:
        print '!! Could not clean deposits directory. Unexpected error.'
        raise
    return 0

def main(argv):
    if len(argv) != 1:
        print 'usage: zncrypt-clean [\'zncrypt-prepare\'d storage directory]'
        exit(1)
    
    if getuid() != 0:
        print '!! Please run as root.'
        exit(1)
    
    control_file = '/etc/zncrypt/control'
    ztab_file = '/etc/zncrypt/ztab'
    deposits_dir = '/etc/zncrypt/ztrustee/deposits'
    
    print 'Cleaning \'{0}\' from zNcrypt configuration...'.format(argv[0])
    clean_control(argv[0], control_file)
    clean_ztab(argv[0], ztab_file)
    clean_deposits(argv[0], deposits_dir)
    print 'Done!'
    
    return 0

if __name__ == "__main__":
    main(argv[1:])